{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-ellipse-3005"
		},
		"LinkedServiceForSourceToCurated_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LinkedServiceForSourceToCurated'"
		},
		"LS_KeyVaultForSqlSecrets_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvault-EllipseProject.vault.azure.net/"
		},
		"LinkedServiceForSourceToCurated_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://saellipse3005gen2.dfs.core.windows.net/"
		},
		"LS_SqlDatabaseEllipse_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ellipse-sql-server.database.windows.net"
		},
		"LS_SqlDatabaseEllipse_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "nayapaysql"
		},
		"LS_SqlDatabaseEllipse_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "cloudsql"
		},
		"LS_SqlServerOnPrem_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-QR891Q3\\SQLEXPRESS"
		},
		"LS_SqlServerOnPrem_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorksLT2017"
		},
		"LS_SqlServerOnPrem_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mrk"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/EmailAlert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SendMail",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": "https://laemailalerts.azurewebsites.net:443/api/Stateful-ForEmail-WorkFlow/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=yk9bmaCFIEmNfUXAbmTRwAD2hVkOzsr4aC5QqFh94jQ",
							"body": {
								"value": "{\"DatafactoryName\" : \"@{pipeline().DataFactory}\",\"PipelineName\":\"@{pipeline().parameters.PipelineName}\", \"Subject\" : \"@{pipeline().parameters.Subject}\" , \"Message\": \"@{pipeline().parameters.Message}\"",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Message": {
						"type": "String"
					},
					"PipelineName": {
						"type": "String"
					},
					"Subject": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVaultForSqlSecrets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KeyVaultForSqlSecrets_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceForSourceToCurated')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LinkedServiceForSourceToCurated_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LinkedServiceForSourceToCurated_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-SqlServer')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "This Self Hosted IR is to get data from my windows on premise SQL server",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ForEachGetMetaData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceForSourceToCurated",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"directoryName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "Source",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceForSourceToCurated')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ForLookUpAndForeach')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceForSourceToCurated",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "metadataExcelCSV_ver02.csv",
						"fileSystem": "metadatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Inputcontainer",
						"type": "String"
					},
					{
						"name": "Inputdirectory",
						"type": "String"
					},
					{
						"name": "Inputfile",
						"type": "String"
					},
					{
						"name": "Outputcontainer",
						"type": "String"
					},
					{
						"name": "OutputDirectory",
						"type": "String"
					},
					{
						"name": "Outputfile",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceForSourceToCurated')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ForParameterizedDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceForSourceToCurated",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containername": {
						"type": "string"
					},
					"directoryname": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directoryname",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceForSourceToCurated')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GetMetaDataActivity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceForSourceToCurated",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Source",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Department_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceForSourceToCurated')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SinkCuratedDepartmentCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceForSourceToCurated",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "AddressTable.csv",
						"folderPath": "Curated",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceForSourceToCurated')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FromSourceToCurated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceForSourceToCurated",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Department2.csv",
						"folderPath": "Source",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceForSourceToCurated')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SqlDatabaseEllipse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SqlDatabaseEllipse_properties_typeProperties_server')]",
					"database": "[parameters('LS_SqlDatabaseEllipse_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SqlDatabaseEllipse_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVaultForSqlSecrets",
							"type": "LinkedServiceReference"
						},
						"secretName": "nayapaySqlPassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVaultForSqlSecrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SqlServerOnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('LS_SqlServerOnPrem_properties_typeProperties_server')]",
					"database": "[parameters('LS_SqlServerOnPrem_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SqlServerOnPrem_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVaultForSqlSecrets",
							"type": "LinkedServiceReference"
						},
						"secretName": "OnPremSqlPassword"
					},
					"alwaysEncryptedSettings": {
						"alwaysEncryptedAkvAuthType": "ManagedIdentity"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-SqlServer",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-SqlServer')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVaultForSqlSecrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetaDataActivityDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_GetMetaDataActivity",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(formatDateTime(activity('Get Metadata2').output.lastModified, 'yyyy-MM-dd'), formatDateTime(utcNow(), 'yyyy-MM-dd'))\n",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait2",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyData_GetMetaData_copy",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_ForParameterizedDataset",
														"type": "DatasetReference",
														"parameters": {
															"containername": "input",
															"directoryname": "Source",
															"filename": {
																"value": "@activity('Get Metadata2').output.itemName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ForParameterizedDataset",
														"type": "DatasetReference",
														"parameters": {
															"containername": "input",
															"directoryname": "curated",
															"filename": {
																"value": "@activity('Get Metadata2').output.itemName",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ForEachGetMetaData",
											"type": "DatasetReference",
											"parameters": {
												"containerName": "input",
												"directoryName": "Source",
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"columnCount",
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GetMetaDataActivity')]",
				"[concat(variables('factoryId'), '/datasets/DS_ForEachGetMetaData')]",
				"[concat(variables('factoryId'), '/datasets/DS_ForParameterizedDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/forEachWithLookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookUpActivityName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_ForLookUpAndForeach",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachLoopForParameterizedDataset",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookUpActivityName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookUpActivityName').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyDataForParamterizedDemo",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ForParameterizedDataset",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@item().Inputcontainer",
													"type": "Expression"
												},
												"directoryname": {
													"value": "@item().Inputdirectory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().Inputfile",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ForParameterizedDataset",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@item().Outputcontainer",
													"type": "Expression"
												},
												"directoryname": {
													"value": "@item().OutputDirectory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().Outputfile",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ForLookUpAndForeach')]",
				"[concat(variables('factoryId'), '/datasets/DS_ForParameterizedDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineForParameterizedDatasetDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachLoopForParameterizedDataset",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('metadata')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyDataForParamterizedDemo",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ForParameterizedDataset",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@item().Inputcontainer",
													"type": "Expression"
												},
												"directoryname": {
													"value": "@item().Inputdirectory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().Inputfile",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ForParameterizedDataset",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@item().Outputcontainer",
													"type": "Expression"
												},
												"directoryname": {
													"value": "@item().OutputDirectory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().Outputfile",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"metadata": {
						"type": "Array",
						"defaultValue": [
							{
								"Inputfile": "Employee_data.csv",
								"Inputcontainer": "input",
								"Inputdirectory": "Source",
								"Outputcontainer": "input",
								"OutputDirectory": "Curated",
								"Outputfile": "Employee_data_foreach.csv"
							},
							{
								"Inputfile": "Department.csv",
								"Inputcontainer": "input",
								"Inputdirectory": "Source",
								"Outputcontainer": "input",
								"OutputDirectory": "Curated",
								"Outputfile": "Department_foreach.csv"
							},
							{
								"Inputfile": "Department2.csv",
								"Inputcontainer": "input",
								"Inputdirectory": "Source",
								"Outputcontainer": "input",
								"OutputDirectory": "Curated",
								"Outputfile": "Department2_foreach.csv"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ForParameterizedDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_Abhishek')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlDatabaseEllipse",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schmeaname": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schmeaname",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlDatabaseEllipse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SqlForParameterizedDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlDatabaseEllipse",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Outputschema": {
						"type": "string"
					},
					"OutputTable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlDatabaseEllipse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetSqlDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlDatabaseEllipse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "departmentTableSql"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlDatabaseEllipse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServerOnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServerOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataFromDLtoSql_params')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachActivityTOGetDataFromDLToSql",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('metadata')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ForParameterizedDataset",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@item().Inputcontainer",
													"type": "Expression"
												},
												"directoryname": {
													"value": "@item().Inputdirectory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().Inputfile",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SQL_Abhishek",
											"type": "DatasetReference",
											"parameters": {
												"schmeaname": {
													"value": "@item().Outputschema",
													"type": "Expression"
												},
												"tablename": {
													"value": "@item().OutputTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"metadata": {
						"type": "Array",
						"defaultValue": [
							{
								"Inputfile": "Employee_data.csv",
								"Inputcontainer": "input",
								"Inputdirectory": "Source",
								"Outputschema": "dbo",
								"OutputTable": "EmployeeTest"
							},
							{
								"Inputfile": "Department.csv",
								"Inputcontainer": "input",
								"Inputdirectory": "Source",
								"Outputschema": "dbo",
								"OutputTable": "DepartmentTest"
							},
							{
								"Inputfile": "Department2.csv",
								"Inputcontainer": "input",
								"Inputdirectory": "Source",
								"Outputschema": "dbo",
								"OutputTable": "Department2Test"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ForParameterizedDataset')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_Abhishek')]"
			]
		}
	]
}